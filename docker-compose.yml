version: "3.7"

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always
    networks:
      - kafka-net
    ports:
      - "2181:2181"
    volumes:
      - zookeeper:/bitnami/zookeeper

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    restart: always
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    volumes:
      - kafka:/bitnami/kafka
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "true"
    depends_on:
      - zookeeper
  kafdrop:
    container_name: kafdrop_container
    image: obsidiandynamics/kafdrop:3.24.0
    networks:
      - kafka-net
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      SERVER_PORT: 9002
    ports:
      - 9002:9002
    depends_on:
      - kafka

  consumer:
    image: consumer:1.0
    build:
      dockerfile: Dockerfile
      context: .
    environment:
      KAFKA_URL: kafka
      KAFKA_PORT: 29092
    networks:
      - kafka-net
    depends_on:
      - kafka

volumes:
  kafka:
  zookeeper: